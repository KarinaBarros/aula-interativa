1. Requisitos Funcionais

1.1. Páginas de explicação sobre banco de dados
Descrição: O sistema deve oferecer páginas com explicações simples e didáticas sobre o conceito de banco de dados para crianças do 7º ano.
Tarefas:
Exibir conteúdos educacionais.
Permitir a navegação entre diferentes seções explicativas.

1.2. Formulário de cadastro de alunos
Descrição: O sistema deve fornecer um formulário onde os alunos podem cadastrar suas informações.
Tarefas:
Permitir inserção de dados como RA (chave primária), nome e idade.
Validar a unicidade do RA.
Exibir mensagem de confirmação ao inserir os dados corretamente.

1.3. Consulta de alunos cadastrados
Descrição: O sistema deve permitir a visualização de todos os alunos cadastrados.
Tarefas:
Exibir uma tabela com os dados dos alunos (RA, nome e idade).
Permitir ordenação e filtragem dos dados.

1.4. Jogo da Discórdia (votação)
Descrição: O sistema deve permitir que os alunos votem em diferentes categorias, garantindo que cada aluno vote apenas uma vez por categoria.
Tarefas:
Exibir um formulário de votação com as categorias.
Garantir a unicidade do voto por categoria para cada aluno.
Exibir os vencedores de cada categoria após o término da votação.

1.5. Teste com 10 questões
Descrição: O sistema deve permitir que os alunos respondam a um teste com 10 questões e que suas respostas sejam armazenadas em uma tabela de respostas.
Tarefas:
Exibir o formulário com as 10 perguntas.
Armazenar as respostas na tabela de respostas.
Calcular e armazenar a nota na tabela nota.

1.6. Exibir o vencedor do teste
Descrição: O sistema deve exibir o aluno com a melhor nota no teste. Em caso de empate, o aluno que enviou o formulário primeiro deve ser o vencedor.
Tarefas:
Buscar a maior nota.
Em caso de empate, verificar o timestamp de submissão.
Exibir o nome do vencedor.

2. Requisitos Não Funcionais

2.1. Usabilidade
O sistema deve ser intuitivo e fácil de usar para alunos de 7º ano.
A interface deve ser visualmente amigável, com botões e textos bem visíveis.
2.2. Performance
O sistema deve ser capaz de lidar com consultas e inserções de dados em tempo real, garantindo respostas rápidas.
2.3. Segurança
O sistema deve garantir que apenas o aluno possa inserir suas respostas e votos.
O RA deve ser utilizado para garantir a unicidade dos registros de cada aluno.
O sistema deve proteger as informações dos alunos e impedir acessos não autorizados.
2.4. Acessibilidade
O sistema deve ser compatível com navegadores comuns.

3. Requisitos Técnicos

3.1. Frameworks e Tecnologias
Next.js: Usado para o desenvolvimento do frontend e backend.
Neon: Banco de dados para armazenar alunos, votos, respostas e notas.
Postgree: Usado para conectar a aplicação ao banco de dados
Axios: Para fazer requisições HTTP.
Tailwind: Para estilização das páginas.
3.2. Autenticação e Autorização
Senha armazenada em variáveis de ambiente criptografada somente para proteção do banco de dados.
3.3. Conectividade com Banco de Dados
O sistema deve permitir o acesso ao banco de dados Neon para inserções, consultas e atualizações.
As tabelas do banco de dados devem incluir:
Tabela alunos com colunas ra, nome, idade.
Tabela votos com colunas ra, categoria, voto.
Tabela respostas com colunas ra, questao, resposta.
Tabela nota com colunas ra, nota, timestamp.
3.4. Validação e Feedback
O sistema deve fornecer feedback em tempo real para os usuários após a inserção dos dados, seja de sucesso ou falha.
3.5. Deploy e Hospedagem
O projeto deve ser hospedado em um ambiente seguro e acessível pela internet.
Deve utilizar hospedagem que suporte Next.js e um banco de dados PostgreSQL.
4. Requisitos de Implantação
O sistema deve ser implantado em um servidor que permita o acesso simultâneo de vários alunos.
O ambiente de produção deve ser seguro e protegido com backups automáticos do banco de dados.